---
- name: Configure Server Environments
  hosts: homelab
  gather_facts: true
  become: true
  roles:
    - linux_node
  tags:
    - linuxEnv

# - name: Setup Tailscale Connection
#   hosts: stoneward
#   gather_facts: true
#   become: true
#   roles:
#     - tailscale
#   tags:
#     - tailscale

## Not ready this require a file to allow unattended install
# - name: Setup Pi-Hole
#   hosts: skybreaker
#   gather_facts: true
#   become: true
#   roles:
#     - pi-hole
#   tags:
#     - dns

- name: Setup SMB Share
  hosts: bondsmith
  gather_facts: true
  become: true
  roles:
    - nas
  vars:
    nas_user: k3s-nas-user
  tags: 
    - smb

- name: Configure the K3S Nodes
  hosts: k3s_cluster
  gather_facts: true
  become: true
  roles:
    - k3s_prereq
  tags: 
    - k3s
    - k3s_server
    - k3s_agent

- name: Setup First K3S Server Node
  hosts: "{{ groups['master_nodes'][0] }}"
  gather_facts: true
  become: true
  roles:
    - k3s_server
  tags:
    - k3s
    - k3s_server

- name: Fetch the cluster token from first server node
  hosts: "{{ groups['master_nodes'][0] }}"
  become: true
  tasks:
      - name: Fetch the server token
        command: "cat /var/lib/rancher/k3s/server/token"
        register: token
        changed_when: false
      - name: Set the token fact
        ansible.builtin.set_fact:
          k3s_server_token: "{{ token.stdout }}"
  tags:
    - k3s_server
    - k3s_agent
    - k3s

- name: Setup Additional K3S Server Nodes
  hosts: "master_nodes:!{{ groups['master_nodes'][0] }}"
  gather_facts: true
  become: true
  vars:
    k3s_server_token: "{{ hostvars[groups['master_nodes'][0]]['k3s_server_token'] }}"
    first_master_host: "{{ hostvars[groups['master_nodes'][0]]['ansible_host'] }}"
  roles:
    - k3s_additional_server
  tags:
    - k3s
    - k3s_server

- name: Setup K3S Agents
  hosts: worker_nodes
  gather_facts: true
  become: true
  roles:
    - k3s_agent
  tags:
    - k3s
    - k3s_agent
  vars:
    k3s_server_token: "{{ hostvars[groups['master_nodes'][0]]['k3s_server_token'] }}"
    api_endpoint: "{{ hostvars[groups['master_nodes'][0]]['ansible_host'] }}"
